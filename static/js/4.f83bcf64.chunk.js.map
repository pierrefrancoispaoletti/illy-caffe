{"version":3,"sources":["components/AdminButtonBar/admin-button-bar.style.js","components/AdminButtonBar/AdminButtonBar.js","components/WineElement/WineElement.js","components/ProductElement/ProductElement.js","pages/Home/Home.js"],"names":["AdminButtonBarContainer","styled","div","AdminButtonContainer","AdminButton","button","AdminButtonBar","_id","product","token","useSelector","selectCurrentUser","dispatch","useDispatch","type","onClick","toggleModal","setProductToEdit","icon","faEdit","size","color","updateProdut","visible","faEye","faEyeSlash","deleteProduct","faTrash","WineElement","couleur","map","isChecked","className","value","style","display","justifyContent","faWineBottle","Number","price","toFixed","ProductElement","description","title","category","user","role","every","Home","products","selectProductsByCategory","useEffect","getProductsByLocation","placeLocation"],"mappings":"mKAEaA,EAA0BC,IAAOC,IAAV,uIAQvBC,EAAuBF,IAAOC,IAAV,4CAIpBE,EAAcH,IAAOI,OAAV,+H,+BCoDTC,EA1CQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QACrBC,EAAUC,YAAYC,KAAtBF,MACFG,EAAWC,cACjB,OACE,eAACb,EAAD,WACE,cAACG,EAAD,UACE,cAACC,EAAD,CACEU,KAAK,SACLC,QAAS,WACPH,EAASI,YAAY,WACrBJ,EAASK,YAAiBT,KAJ9B,SAOE,cAAC,IAAD,CAAiBU,KAAMC,IAAQC,KAAK,KAAKC,MAAM,eAGnD,cAAClB,EAAD,UACE,cAACC,EAAD,CACEU,KAAK,SACLC,QAAS,kBACPO,YAAa,CAAEf,MAAKgB,UAAS,OAACf,QAAD,IAACA,OAAD,EAACA,EAASe,UAAWX,EAAUH,IAHhE,SAME,cAAC,IAAD,CACES,MAAa,OAAPV,QAAO,IAAPA,OAAA,EAAAA,EAASe,SAAUC,IAAQC,IACjCL,KAAK,KACLC,MAAM,aAIZ,cAAClB,EAAD,UACE,cAACC,EAAD,CACEU,KAAK,SACLC,QAAS,kBAAMW,YAAcnB,EAAKK,EAAUH,IAF9C,SAIE,cAAC,IAAD,CAAiBS,KAAMS,IAASP,KAAK,KAAKC,MAAM,gB,QC3B3CO,EAxBK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,cAAC,IAAD,UACGA,EAAQC,KACP,SAACT,GAAD,OACO,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOU,YACL,cAAC,IAAD,CACEC,UAAU,QAEVX,MAAOA,EAAMY,MAHf,SAKE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,iBAA/C,UACE,iCACE,cAAC,IAAD,CAAiBlB,KAAMmB,IAAcjB,KAAK,OAD5C,QAGA,iCAAOkB,OAAOjB,EAAMkB,OAAOC,QAAQ,GAAnC,iBAPGnB,EAAMY,aCuBVQ,IAhCQ,SAAC,GAAiB,IAAfjC,EAAc,EAAdA,QAChBD,EACNC,EADMD,IAAKgC,EACX/B,EADW+B,MAAOG,EAClBlC,EADkBkC,YAAaC,EAC/BnC,EAD+BmC,MAAOpB,EACtCf,EADsCe,QAASqB,EAC/CpC,EAD+CoC,SAAUf,EACzDrB,EADyDqB,QAErDgB,EAAOnC,YAAYC,KACzB,OACE,eAAC,IAAD,CAAgBY,QAAwB,aAAX,OAAJsB,QAAI,IAAJA,OAAA,EAAAA,EAAMC,OAAsBvB,EAArD,UACGsB,GAAsB,YAAdA,EAAKC,MACZ,cAAC,EAAD,CAAgBvC,IAAKA,EAAKC,QAASA,IAErC,qBAAIwB,UAAU,QAAd,UACE,yCAAUT,EAAU,GAAK,cAAzB,YAAuCoB,KACzB,WAAbC,GAAyBf,EAAQkB,OAAM,SAAC1B,GAAD,OAAYA,EAAMU,aACxD,uBAAMC,UAAU,QAAhB,iBAAyBO,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOC,QAAQ,GAAxC,aAEA,cAAC,EAAD,CAAaX,QAASA,OAa1B,mBAAGG,UAAU,cAAb,SAA4BU,S,gCClClC,wEAyBeM,UAjBF,WACX,IAAMC,EAAWvC,YAAYwC,KACvBtC,EAAWC,cAIjB,OAHAsC,qBAAU,WACRC,YAAsBC,IAAe,QAASzC,KAC7C,CAACA,IAEF,+BACE,cAAC,IAAD,iBACGqC,QADH,IACGA,OADH,EACGA,EAAUnB,KAAI,SAACtB,GAAD,OACb,cAAC,IAAD,CAAkCA,QAASA,GAAtBA,EAAQD","file":"static/js/4.f83bcf64.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const AdminButtonBarContainer = styled.div`\n  margin: 12px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const AdminButtonContainer = styled.div`\n  margin: 8px;\n`;\n\nexport const AdminButton = styled.button`\n  border: none;\n  outline: none;\n  border-radius: 50px;\n  padding: 12px;\n  background: white;\n`;\n","import {\n  faEdit,\n  faEye,\n  faEyeSlash,\n  faTrash,\n} from \"@fortawesome/pro-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  AdminButton,\n  AdminButtonBarContainer,\n  AdminButtonContainer,\n} from \"./admin-button-bar.style\";\nimport {\n  deleteProduct,\n  updateProdut,\n} from \"../../redux/reducers/Products/querries\";\nimport {\n  setProductToEdit,\n  toggleModal,\n} from \"../../redux/reducers/Products/actions\";\nimport { selectCurrentUser } from \"../../redux/reducers/User/selector\";\n\nconst AdminButtonBar = ({ _id, product }) => {\n  const { token } = useSelector(selectCurrentUser);\n  const dispatch = useDispatch();\n  return (\n    <AdminButtonBarContainer>\n      <AdminButtonContainer>\n        <AdminButton\n          type=\"button\"\n          onClick={() => {\n            dispatch(toggleModal(\"editer\"));\n            dispatch(setProductToEdit(product));\n          }}\n        >\n          <FontAwesomeIcon icon={faEdit} size=\"2x\" color=\"purple\" />\n        </AdminButton>\n      </AdminButtonContainer>\n      <AdminButtonContainer>\n        <AdminButton\n          type=\"button\"\n          onClick={() =>\n            updateProdut({ _id, visible: !product?.visible }, dispatch, token)\n          }\n        >\n          <FontAwesomeIcon\n            icon={product?.visible ? faEye : faEyeSlash}\n            size=\"2x\"\n            color=\"grey\"\n          />\n        </AdminButton>\n      </AdminButtonContainer>\n      <AdminButtonContainer>\n        <AdminButton\n          type=\"button\"\n          onClick={() => deleteProduct(_id, dispatch, token)}\n        >\n          <FontAwesomeIcon icon={faTrash} size=\"2x\" color=\"red\" />\n        </AdminButton>\n      </AdminButtonContainer>\n    </AdminButtonBarContainer>\n  );\n};\n\nexport default AdminButtonBar;\n","import { faWineBottle } from \"@fortawesome/pro-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport {\n  WinePriceContainer,\n  WinePriceElement,\n} from \"../TableauHomePage/tableau-homepage.style\";\n\nconst WineElement = ({ couleur }) => {\n  return (\n    <WinePriceContainer>\n      {couleur.map(\n        (color) =>\n          color?.isChecked && (\n            <WinePriceElement\n              className=\"price\"\n              key={color.value}\n              color={color.value}\n            >\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <span>\n                  <FontAwesomeIcon icon={faWineBottle} size=\"1x\" /> :\n                </span>\n                <span>{Number(color.price).toFixed(2)} €</span>\n              </div>\n            </WinePriceElement>\n          )\n      )}\n    </WinePriceContainer>\n  );\n};\n\nexport default WineElement;\n","import React from \"react\";\nimport AdminButtonBar from \"../AdminButtonBar/AdminButtonBar\";\nimport { TableauContent } from \"../TableauHomePage/tableau-homepage.style\";\nimport { selectCurrentUser } from \"../../redux/reducers/User/selector\";\nimport { useSelector } from \"react-redux\";\nimport WineElement from \"../WineElement/WineElement\";\n\nconst ProductElement = ({ product }) => {\n  const { _id, price, description, title, visible, category, couleur } =\n    product;\n  const user = useSelector(selectCurrentUser);\n  return (\n    <TableauContent visible={user?.role === \"isAdmin\" || visible}>\n      {user && user.role === \"isAdmin\" && (\n        <AdminButtonBar _id={_id} product={product} />\n      )}\n      <h3 className=\"title\">\n        <span>{`${visible ? \"\" : \"CACHÉ : \"} ${title}`}</span>\n        {category !== \"le-vin\" || couleur.every((color) => !color.isChecked) ? (\n          <span className=\"price\">{price?.toFixed(2)} €</span>\n        ) : (\n          <WineElement couleur={couleur} />\n        )}\n      </h3>\n      {/* <WineColorContainer>\n        {couleur.map(\n          (color) =>\n            color.isChecked && (\n              <WineItemElement key={color.value} color={color.value}>\n                <FontAwesomeIcon icon={faWineBottle} size=\"2x\" />\n              </WineItemElement>\n            )\n        )}\n      </WineColorContainer> */}\n      <p className=\"description\">{description}</p>\n    </TableauContent>\n  );\n};\n\nexport default ProductElement;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ProductElement from \"../../components/ProductElement/ProductElement\";\nimport TableauHomePage from \"../../components/TableauHomePage/TableauHomePage\";\nimport { getProductsByLocation } from \"../../redux/reducers/Products/querries\";\nimport { selectProductsByCategory } from \"../../redux/reducers/Products/selectors\";\nimport { placeLocation } from \"../../_const\";\n\nconst Home = () => {\n  const products = useSelector(selectProductsByCategory);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getProductsByLocation(placeLocation, \"today\", dispatch);\n  }, [dispatch]);\n  return (\n    <main>\n      <TableauHomePage>\n        {products?.map((product) => (\n          <ProductElement key={product._id} product={product} />\n        ))}\n      </TableauHomePage>\n    </main>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}