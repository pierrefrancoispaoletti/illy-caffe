{"version":3,"sources":["redux/reducers/User/querries.js","pages/Login/login.style.js","pages/Login/Login.js"],"names":["logger","credentials","dispatch","setLoading","a","email","password","axios","method","url","serverURI","data","response","status","setCurrentUser","token","role","setUserMessage","message","LoginContainer","styled","div","colors","main","secondary","FormContainer","form","LoginButton","button","props","disabled","css","Login","loading","otherProps","useDispatch","useState","user","setUser","console","log","setCredentials","e","target","name","value","handleSubmit","preventDefault","LoaderElement","onSubmit","FormInput","type","label","handleChange","required"],"mappings":"yPAIaA,EAAM,uCAAG,WAAOC,EAAaC,EAAUC,GAA9B,mBAAAC,EAAA,6DACZC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SACfH,GAAW,GAFS,kBAIKI,IAAM,CAC3BC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAL,eACHC,KAAM,CAAEN,QAAOC,cAPC,OASW,OALvBM,EAJY,QASLD,KAAKE,QAChBX,EACEY,YAAe,CAAEC,MAAOH,EAASD,KAAKI,MAAOC,KAAMJ,EAASD,KAAKK,QAGrEd,EAASe,YAAeL,EAASD,KAAKO,UACtCf,GAAW,GAfO,kDAiBlBD,EAASe,YAAe,gCAjBN,0DAAH,0D,cCONE,EAAiBC,IAAOC,IAAV,8iBAOeC,IAAOC,KAASD,IAAOE,UAgBpDF,IAAOC,MAIPE,EAAgBL,IAAOM,KAAV,6HAObC,EAAcP,IAAOQ,OAAV,8LAIbN,IAAOC,KACID,IAAOC,KAEbD,IAAOE,WAjDJ,SAACK,GAClB,GAAIA,EAAMC,SACR,OAAOC,YAAP,4D,kCCsDWC,UApDD,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAAS9B,EAAgC,EAAhCA,WAAe+B,EAAiB,iBAClDhC,EAAWiC,cACjB,EAAwBC,mBAAS,CAAE/B,MAAO,GAAIC,SAAU,KAAxD,mBAAO+B,EAAP,KAAaC,EAAb,KAEAC,QAAQC,IAAIN,GAEZ,IAAMO,EAAiB,SAACC,GACtB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdP,EAAQ,2BAAKD,GAAN,kBAAaO,EAAOC,MAGvBC,EAAY,uCAAG,WAAOJ,GAAP,SAAAtC,EAAA,sDACnBsC,EAAEK,iBACF/C,EAAOqC,EAAMnC,EAAUC,GAFJ,2CAAH,sDAIlB,OACE,+BACE,eAACgB,EAAD,WACE,2CACCc,EACC,cAACe,EAAA,EAAD,IAEA,eAACvB,EAAD,CAAewB,SAAUH,EAAzB,UACE,cAACI,EAAA,EAAD,CACEC,KAAK,QACLP,KAAK,QACLQ,MAAM,SACNP,MAAOR,EAAKhC,MACZgD,aAAcZ,EACda,UAAQ,IAEV,cAACJ,EAAA,EAAD,CACEC,KAAK,WACLP,KAAK,WACLQ,MAAM,eACNP,MAAOR,EAAK/B,SACZ+C,aAAcZ,EACda,UAAQ,IAEV,cAAC3B,EAAD,CACEG,UAAWO,EAAK/B,WAAa+B,EAAKhC,OAAS4B,EAC3CkB,KAAK,SAFP","file":"static/js/3.3c60888c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { serverURI } from \"../../../_const\";\nimport { setCurrentUser, setUserMessage } from \"./actions\";\n\nexport const logger = async (credentials, dispatch, setLoading) => {\n  const { email, password } = credentials;\n  setLoading(true);\n  try {\n    const response = await axios({\n      method: \"POST\",\n      url: `${serverURI}/auth/login`,\n      data: { email, password },\n    });\n    if (response.data.status === 200) {\n      dispatch(\n        setCurrentUser({ token: response.data.token, role: response.data.role })\n      );\n    }\n    dispatch(setUserMessage(response.data.message));\n    setLoading(false);\n  } catch (error) {\n    dispatch(setUserMessage(\"Il y à eu un problème\"));\n  }\n};\n\nexport const validateToken = (token) => {\n  return axios({\n    method: \"POST\",\n    url: `${serverURI}/verify/`,\n    data: { token },\n  });\n};\n","import styled, { css } from \"styled-components\";\nimport { colors } from \"../../_const\";\n\nconst isDisabled = (props) => {\n  if (props.disabled) {\n    return css`\n      background: #ccc;\n    `;\n  }\n};\n\nexport const LoginContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50px;\n  margin: 12px;\n  background: linear-gradient(to right, ${colors.main}, ${colors.secondary});\n  background-size: 400% 400%;\n  padding-bottom: 12px;\n  animation: backgroundMoving 25s infinite ease;\n  @keyframes backgroundMoving {\n    0% {\n      background-position: 92% 0%;\n    }\n    50% {\n      background-position: 9% 100%;\n    }\n    100% {\n      background-position: 92% 0%;\n    }\n  }\n  & > h2 {\n    color: ${colors.main};\n  }\n`;\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LoginButton = styled.button`\n  font-size: 2em;\n  background-color: transparent;\n  outline: none;\n  color: ${colors.main};\n  border: 3px solid ${colors.main};\n  border-radius: 50px;\n  background: ${colors.secondary};\n  ${isDisabled}\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FormInput from \"../../components/FormInput/FormInput\";\nimport LoaderElement from \"../../components/Loader/LoaderElement\";\nimport { logger } from \"../../redux/reducers/User/querries\";\nimport { FormContainer, LoginButton, LoginContainer } from \"./login.style\";\n\nconst Login = ({ loading, setLoading, ...otherProps }) => {\n  const dispatch = useDispatch();\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\n\n  console.log(otherProps);\n\n  const setCredentials = (e) => {\n    const { name, value } = e.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    logger(user, dispatch, setLoading);\n  };\n  return (\n    <main>\n      <LoginContainer>\n        <h2>Connexion</h2>\n        {loading ? (\n          <LoaderElement />\n        ) : (\n          <FormContainer onSubmit={handleSubmit}>\n            <FormInput\n              type=\"email\"\n              name=\"email\"\n              label=\"e-mail\"\n              value={user.email}\n              handleChange={setCredentials}\n              required\n            />\n            <FormInput\n              type=\"password\"\n              name=\"password\"\n              label=\"mot de passe\"\n              value={user.password}\n              handleChange={setCredentials}\n              required\n            />\n            <LoginButton\n              disabled={!user.password || !user.email || loading}\n              type=\"submit\"\n            >\n              Se Connecter\n            </LoginButton>\n          </FormContainer>\n        )}\n      </LoginContainer>\n    </main>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}